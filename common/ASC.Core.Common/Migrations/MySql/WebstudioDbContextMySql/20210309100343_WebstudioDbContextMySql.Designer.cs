// <auto-generated />
using System;
using ASC.Core.Common.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASC.Core.Common.Migrations.MySql.WebstudioDbContextMySql
{
    [DbContext(typeof(MySqlWebstudioDbContext))]
    [Migration("20210309100343_WebstudioDbContextMySql")]
    partial class WebstudioDbContextMySql
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("ASC.Core.Common.EF.Model.DbWebstudioIndex", b =>
                {
                    b.Property<string>("IndexName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("index_name")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("last_modified")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("IndexName")
                        .HasName("PRIMARY");

                    b.ToTable("webstudio_index");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.Model.DbWebstudioSettings", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TenantID");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(64)")
                        .HasColumnName("ID")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(64)")
                        .HasColumnName("UserID")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("mediumtext")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.HasKey("TenantId", "Id", "UserId")
                        .HasName("PRIMARY");

                    b.HasIndex("Id")
                        .HasDatabaseName("ID");

                    b.ToTable("webstudio_settings");

                    b.HasData(
                        new
                        {
                            TenantId = 1,
                            Id = "9a925891-1f92-4ed7-b277-d6f649739f06",
                            UserId = "00000000-0000-0000-0000-000000000000",
                            Data = "{'Completed':false}"
                        });
                });

            modelBuilder.Entity("ASC.Core.Common.EF.Model.DbWebstudioUserVisit", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenantid");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime")
                        .HasColumnName("visitdate");

                    b.Property<string>("ProductId")
                        .HasColumnType("varchar(38)")
                        .HasColumnName("productid")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(38)")
                        .HasColumnName("userid")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<DateTime>("FirstVisitTime")
                        .HasColumnType("datetime")
                        .HasColumnName("firstvisittime");

                    b.Property<DateTime>("LastVisitTime")
                        .HasColumnType("datetime")
                        .HasColumnName("lastvisittime");

                    b.Property<int>("VisitCount")
                        .HasColumnType("int")
                        .HasColumnName("visitcount");

                    b.HasKey("TenantId", "VisitDate", "ProductId", "UserId")
                        .HasName("PRIMARY");

                    b.HasIndex("VisitDate")
                        .HasDatabaseName("visitdate");

                    b.ToTable("webstudio_uservisit");

                    b.HasData(
                        new
                        {
                            TenantId = 1,
                            VisitDate = new DateTime(2021, 3, 9, 10, 3, 42, 561, DateTimeKind.Utc).AddTicks(7735),
                            ProductId = "00000000-0000-0000-0000-000000000000",
                            UserId = "66faa6e4-f133-11ea-b126-00ffeec8b4ef",
                            FirstVisitTime = new DateTime(2021, 3, 9, 10, 3, 42, 562, DateTimeKind.Utc).AddTicks(1507),
                            LastVisitTime = new DateTime(2021, 3, 9, 10, 3, 42, 562, DateTimeKind.Utc).AddTicks(2187),
                            VisitCount = 3
                        },
                        new
                        {
                            TenantId = 1,
                            VisitDate = new DateTime(2021, 3, 9, 10, 3, 42, 562, DateTimeKind.Utc).AddTicks(2849),
                            ProductId = "00000000-0000-0000-0000-000000000000",
                            UserId = "66faa6e4-f133-11ea-b126-00ffeec8b4ef",
                            FirstVisitTime = new DateTime(2021, 3, 9, 10, 3, 42, 562, DateTimeKind.Utc).AddTicks(2872),
                            LastVisitTime = new DateTime(2021, 3, 9, 10, 3, 42, 562, DateTimeKind.Utc).AddTicks(2874),
                            VisitCount = 2
                        },
                        new
                        {
                            TenantId = 1,
                            VisitDate = new DateTime(2021, 3, 9, 10, 3, 42, 562, DateTimeKind.Utc).AddTicks(2876),
                            ProductId = "e67be73d-f9ae-4ce1-8fec-1880cb518cb4",
                            UserId = "66faa6e4-f133-11ea-b126-00ffeec8b4ef",
                            FirstVisitTime = new DateTime(2021, 3, 9, 10, 3, 42, 562, DateTimeKind.Utc).AddTicks(2882),
                            LastVisitTime = new DateTime(2021, 3, 9, 10, 3, 42, 562, DateTimeKind.Utc).AddTicks(2883),
                            VisitCount = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

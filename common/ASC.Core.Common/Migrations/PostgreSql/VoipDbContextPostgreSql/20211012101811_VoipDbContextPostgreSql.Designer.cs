// <auto-generated />
using System;
using ASC.Core.Common.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ASC.Core.Common.Migrations.PostgreSql.VoipDbContextPostgreSql
{
    [DbContext(typeof(PostgreSqlVoipDbContext))]
    [Migration("20211012101811_VoipDbContextPostgreSql")]
    partial class VoipDbContextPostgreSql
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ASC.Core.Common.EF.Model.CrmContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer")
                        .HasColumnName("company_id");

                    b.Property<string>("CompanyName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("company_name")
                        .HasDefaultValueSql("NULL::character varying");

                    b.Property<int>("ContactTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("contact_type_id");

                    b.Property<Guid>("CreateBy")
                        .HasMaxLength(38)
                        .HasColumnType("uuid")
                        .HasColumnName("create_by")
                        .IsFixedLength(true);

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("create_on");

                    b.Property<string>("Currency")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("currency")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("display_name")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("FirstName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("first_name")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Industry")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("industry")
                        .HasDefaultValueSql("NULL");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("boolean")
                        .HasColumnName("is_company");

                    b.Property<bool>("IsShared")
                        .HasColumnType("boolean")
                        .HasColumnName("is_shared");

                    b.Property<Guid>("LastModifedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(38)
                        .HasColumnType("uuid")
                        .HasColumnName("last_modifed_by")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime>("LastModifedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_modifed_on")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("LastName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("last_name")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer")
                        .HasColumnName("status_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("integer")
                        .HasColumnName("tenant_id");

                    b.Property<string>("Title")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("title")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("CreateOn")
                        .HasDatabaseName("create_on_crm_contact");

                    b.HasIndex("LastModifedOn", "TenantId")
                        .HasDatabaseName("last_modifed_on_crm_contact");

                    b.HasIndex("TenantId", "CompanyId")
                        .HasDatabaseName("company_id");

                    b.HasIndex("TenantId", "DisplayName")
                        .HasDatabaseName("display_name");

                    b.ToTable("crm_contact", "onlyoffice");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.Model.DbVoipCall", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("id");

                    b.Property<Guid>("AnsweredBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uuid")
                        .HasColumnName("answered_by")
                        .HasDefaultValueSql("'00000000-0000-0000-0000-000000000000'");

                    b.Property<int>("ContactId")
                        .HasColumnType("integer")
                        .HasColumnName("contact_id");

                    b.Property<int?>("CrmContactId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DialDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dial_date");

                    b.Property<int>("DialDuration")
                        .HasColumnType("integer")
                        .HasColumnName("dial_duration");

                    b.Property<string>("NumberFrom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("number_from");

                    b.Property<string>("NumberTo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("number_to");

                    b.Property<string>("ParentCallId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("parent_call_id");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10,4)")
                        .HasColumnName("price")
                        .HasDefaultValueSql("NULL");

                    b.Property<int>("RecordDuration")
                        .HasColumnType("integer")
                        .HasColumnName("record_duration");

                    b.Property<decimal>("RecordPrice")
                        .HasColumnType("numeric(10,4)")
                        .HasColumnName("record_price");

                    b.Property<string>("RecordSid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("record_sid")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("RecordUrl")
                        .HasColumnType("text")
                        .HasColumnName("record_url");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int>("TenantId")
                        .HasColumnType("integer")
                        .HasColumnName("tenant_id");

                    b.HasKey("Id");

                    b.HasIndex("CrmContactId");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("tenant_id_crm_voip_calls");

                    b.HasIndex("ParentCallId", "TenantId")
                        .HasDatabaseName("parent_call_id");

                    b.ToTable("crm_voip_calls", "onlyoffice");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.Model.VoipNumber", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("alias")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("number");

                    b.Property<string>("Settings")
                        .HasColumnType("text")
                        .HasColumnName("settings");

                    b.Property<int>("TenantId")
                        .HasColumnType("integer")
                        .HasColumnName("tenant_id");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("tenant_id_crm_voip_number");

                    b.ToTable("crm_voip_number", "onlyoffice");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.Model.DbVoipCall", b =>
                {
                    b.HasOne("ASC.Core.Common.EF.Model.CrmContact", "CrmContact")
                        .WithMany()
                        .HasForeignKey("CrmContactId");

                    b.Navigation("CrmContact");
                });
#pragma warning restore 612, 618
        }
    }
}

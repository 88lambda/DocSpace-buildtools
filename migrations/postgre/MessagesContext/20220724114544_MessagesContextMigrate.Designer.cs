// <auto-generated />
using System;
using ASC.MessagingSystem.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ASC.Migrations.PostgreSql.Migrations
{
    [DbContext(typeof(MessagesContext))]
    [Migration("20220724114544_MessagesContextMigrate")]
    partial class MessagesContextMigrate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ASC.MessagingSystem.EF.Model.AuditEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Action")
                        .HasColumnType("integer")
                        .HasColumnName("action");

                    b.Property<string>("Browser")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("browser")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("DescriptionRaw")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20000)
                        .HasColumnType("character varying(20000)")
                        .HasColumnName("description")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Initiator")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("initiator")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Ip")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ip")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Page")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("page")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Platform")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("platform")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Target")
                        .HasColumnType("text")
                        .HasColumnName("target");

                    b.Property<int>("TenantId")
                        .HasColumnType("integer")
                        .HasColumnName("tenant_id");

                    b.Property<Guid?>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(38)
                        .HasColumnType("uuid")
                        .HasColumnName("user_id")
                        .HasDefaultValueSql("NULL")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Date")
                        .HasDatabaseName("date");

                    b.ToTable("audit_events", "onlyoffice");
                });

            modelBuilder.Entity("ASC.MessagingSystem.EF.Model.LoginEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Action")
                        .HasColumnType("integer")
                        .HasColumnName("action");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<string>("Browser")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("browser")
                        .HasDefaultValueSql("NULL::character varying");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("DescriptionRaw")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Ip")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ip")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Login")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("login")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Page")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("page")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Platform")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("platform")
                        .HasDefaultValueSql("NULL");

                    b.Property<int>("TenantId")
                        .HasColumnType("integer")
                        .HasColumnName("tenant_id");

                    b.Property<Guid?>("UserId")
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("uuid")
                        .HasColumnName("user_id")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("Date")
                        .HasDatabaseName("date_login_events");

                    b.HasIndex("UserId", "TenantId")
                        .HasDatabaseName("tenant_id_login_events");

                    b.ToTable("login_events", "onlyoffice");
                });
#pragma warning restore 612, 618
        }
    }
}

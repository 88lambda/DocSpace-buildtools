name: onlyoffice-communityserver
version: "10.0.0"
summary: ""
description: ""
grade: stable
confinement: devmode

apps:  
  app-notify:
    command: start_notify
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]
  app-people-client:
    command: start_people_client
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]
  app-people-server:
    command: start_people_server
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]
  app-web-api:
    command: start_web_api
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]
  app-web-client:
    command: start_web_client
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]
  app-web-studio:
    command: start_web_studio
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]
  app-web-studio-notify:
    command: start_web_studio_notify
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind] 
  nginx:
    command: start_nginx
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]
  mysql:
    command: start_mysql
    stop-command: support-files/mysql.server stop
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]
  mysql-client:
    command: mysql --defaults-file=$SNAP_DATA/mysql/root.ini
    plugs: [network, network-bind]
  mysqldump:
    command: mysqldump --defaults-file=$SNAP_DATA/mysql/root.ini --lock-tables onlyoffice
    plugs: [network, network-bind]
hooks:
  configure:
    plugs: [network, network-bind]
parts:
  deps:
     plugin: nil
     override-pull: |   
        # elasticsearch
        wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
        add-apt-repository "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
        # yarn
        curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
        echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
        apt-get update
  
  communityserver:
    plugin: dotnet
    source: https://github.com/ONLYOFFICE/CommunityServer-AspNetCore.git
    source-type: git
    stage-packages:
      - jq
      - dotnet-sdk-2.2
      - apt-transport-https
      - default-jre
      - elasticsearch
      - python3-pip
    build-packages:
      - dotnet-sdk-2.2
      - yarn   

  python:
    plugin: python
    python-version: python3

  node:
    plugin: nodejs
    node-engine: 12.9.1

  nginx:
    plugin: autotools
    source: https://github.com/nginx/nginx.git
    source-type: git
    # Need the prepare step because configure script resides in an unintuitive
    # location.
    override-build: |
        cp auto/configure .
        snapcraftctl build
    build-packages:
     - libpcre3
     - libpcre3-dev
     - zlib1g-dev
    stage:
      # Remove scripts that we'll be replacing with our own
      - -conf/nginx.conf

  nginx-customizations:
    plugin: dump
    source: src/nginx/

  # Download the boost headers for MySQL. Note that the version used may need to
  # be updated if the version of MySQL changes.
  boost:
    plugin: dump
    source: https://github.com/kyrofa/boost_tarball/raw/master/boost_1_59_0.tar.gz
    source-checksum: sha1/5123209db194d66d69a9cfa5af8ff473d5941d97
    # When building MySQL, the headers in the source directory 'boost/' are
    # required. Previously, using the 'copy' plugin, the whole archive was put
    # under 'boost/', making the headers reside in 'boost/boost/'. Due to a bug,
    # we now only stage the 'boost/' directory without moving it.
    #
    # Bug: https://bugs.launchpad.net/snapcraft/+bug/1757093
    stage:
      - boost/
    prime:
      - -*

  mysql:
    plugin: cmake
    source: https://github.com/mysql/mysql-server.git
    source-tag: mysql-5.7.22
    source-depth: 1
    override-pull: |
      snapcraftctl pull
      git apply $SNAPCRAFT_STAGE/support-compile-time-disabling-of-setpriority.patch
    after: [boost, patches]
    configflags:
      - -DWITH_BOOST=$SNAPCRAFT_STAGE
      - -DWITH_INNODB_PAGE_CLEANER_PRIORITY=OFF
      - -DCMAKE_INSTALL_PREFIX=/
      - -DBUILD_CONFIG=mysql_release
      - -DWITH_UNIT_TESTS=OFF
      - -DWITH_EMBEDDED_SERVER=OFF
      - -DWITH_ARCHIVE_STORAGE_ENGINE=OFF
      - -DWITH_BLACKHOLE_STORAGE_ENGINE=OFF
      - -DWITH_FEDERATED_STORAGE_ENGINE=OFF
      - -DWITH_PARTITION_STORAGE_ENGINE=OFF
      - -DINSTALL_MYSQLTESTDIR=
    build-packages:
      - wget
      - g++
      - cmake
      - bison
      - libncurses5-dev
      - libaio-dev
    stage:
      # Remove scripts that we'll be replacing with our own
      - -support-files/mysql.server
      - -COPYING
    prime:
      # Remove scripts that we'll be replacing with our own
      - -support-files/mysql.server

      # Remove unused binaries that waste space
      - -bin/innochecksum
      - -bin/lz4_decompress
      - -bin/myisam*
      - -bin/mysqladmin
      - -bin/mysqlbinlog
      - -bin/mysql_client_test
      - -bin/mysql_config*
      - -bin/mysqld_multi
      - -bin/mysqlimport
      - -bin/mysql_install_db
      - -bin/mysql_plugin
      - -bin/mysqlpump
      - -bin/mysql_secure_installation
      - -bin/mysqlshow
      - -bin/mysqlslap
      - -bin/mysql_ssl_rsa_setup
      - -bin/mysqltest
      - -bin/mysql_tzinfo_to_sql
      - -bin/perror
      - -bin/replace
      - -bin/resolveip
      - -bin/resolve_stack_dump
      - -bin/zlib_decompress

  # Copy over our MySQL scripts
  mysql-customizations:
    plugin: dump
    source: src/mysql/
  
  patches:
    source: src/patches
    plugin: dump
    prime:
      - -*

  hooks:
    plugin: dump
    source: src/hooks/
    organize:
      bin/: snap/hooks/

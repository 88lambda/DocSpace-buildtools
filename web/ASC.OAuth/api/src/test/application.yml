server:
  port: 9090

socket-server:
  host: 127.0.0.1
  port: 8585

application:
  security:
    cipherSecret: ${CIPHER_SECRET:secret}
  scopes:
    -
      name: accounts:read
      description: read accounts
    -
      name: accounts:write
      description: write accounts

messaging:
  rabbitmq:
    configuration:
      authorization:
        exchange: authorization.exchange
        queue: authorization.queue
        routing: authorization.routing
        deadExchange: authorization.dead.exchange
        deadQueue: authorization.dead.queue
        deadRouting: authorization.dead.routing
      client:
        exchange: client.exchange
        queue: client.queue
        routing: client.routing
        deadExchange: client.dead.exchange
        deadQueue: client.dead.queue
        deadRouting: client.dead.routing
      socket:
        exchange: socket.exchange
        queue: ${random.uuid}
        routing: socket.routing
        deadExchange: socket.dead.exchange
        deadQueue: socket.dead.queue
        deadRouting: socket.dead.routing

spring:
  flyway:
    enabled: true
    baselineOnMigrate: true
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:33060}/${MYSQL_DATABASE:docspace}
    user: ${MYSQL_USER_NAME:keycloak}
    password: ${MYSQL_PASSWORD:keycloak}
    schemas: ${MYSQL_DATABSE:docspace}
    sql-migration-prefix: V
    repeatable-sql-migration-prefix: R
    sql-migration-separator: __
    sql-migration-suffixes: .sql
    locations: classpath:migration
  application:
    name: authorization
  profiles:
    active: ${PROFILE:dev}
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        generate_statistics: false
        jdbc:
          batch_size: 100
        order_inserts: true
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:127.0.0.1}:${MYSQL_PORT:33060}/${MYSQL_DATABASE:docspace}
    username: ${MYSQL_USER_NAME:keycloak}
    password: ${MYSQL_PASSWORD:keycloak}
  rabbitmq:
    host: ${RABBIT_HOST:onlyoffice-rabbitmq}
    port: ${RABBIT_PORT:5671}
    username: ${RABBIT_USER_NAME:guest}
    password: ${RABBIT_PASSWORD:guest}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 3000
          multiplier: 3.0

resilience4j:
  ratelimiter:
    configs:
      default:
        limitRefreshPeriod: 1s
        limitForPeriod: 1000
        timeoutDuration: 500ms
        registerHealthIndicator: true
        eventConsumerBufferSize: 100
    instances:
      getRateLimiter:
        baseConfig: default
      batchRateLimiter:
        baseConfig: default
        limitForPeriod: 1500
      regenerateSecretRateLimiter:
        baseConfig: default
        limitForPeriod: 15
      updateClientRateLimiter:
        baseConfig: default
        limitForPeriod: 15
      deleteClientRateLimiter:
        baseConfig: default
        limitForPeriod: 15
  timelimiter:
    instances:
      mutateTimeLimiter:
        timeoutDuration: 2s
      readTimeLimiter:
        timeoutDuration: 1s

management:
  endpoints:
    web:
      exposure:
        include: "*"